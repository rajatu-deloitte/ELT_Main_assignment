-- TABLE CREATION QUERIES

CREATE TABLE udemy_db.mainasgt.navhistory (code int, nav_date date, nav int, repurchase_price int, sale_price int);
CREATE TABLE udemy_db.mainasgt.amc (id int not null primary key, name varchar(255))
CREATE TABLE udemy_db.mainasgt.fundcategory (id int not null primary key, category varchar(255))
CREATE TABLE udemy_db.mainasgt.mutualfund (code int, amc_id int, category_id int, name varchar(255), isin_growth varchar(255), isin_dividend_payout varchar(255),isin_dividend_reinvestment varchar(255))

--

-- MILESTONE 1 PART 1

select month(nav_date) as nav_month ,code, avg(nav) as nav_average, 
avg(repurchase_price) as repurchase_average, avg(sale_price) as sale_average from 
udemy_db.mainasgt.navhistory group by code, nav_month 

-- MILESTONE 1 PART 2 MAX

select nav_date, t4.code, t4.maximum from udemy_db.mainasgt.navhistory t3 join 
(select t1.code as code, max(t2.nav) as maximum from udemy_db.mainasgt.mutualfund t1 join udemy_db.mainasgt.navhistory t2 
 on t1.code = t2.code group by t1.code) t4
where t3.code = t4.code and t3.nav = t4.maximum;

-- MILESTONE 1 PART 2 MIN 

select nav_date, t4.code as code, t4.minimum from udemy_db.mainasgt.navhistory t3 join 
(select t1.code as code, min(t2.nav) as minimum from udemy_db.mainasgt.mutualfund t1 join 
udemy_db.mainasgt.navhistory t2 
 on t1.code = t2.code group by t1.code) t4
where t3.code = t4.code and t3.nav = t4.minimum

-- MILESTONE 2 PART 1 YTD 
SELECT O1.CODE, ((O2.NAV - O1.NAV)/O1.NAV)*100 AS PERFORMANCE FROM
(SELECT NAV, T2.CODE AS CODE, T2.MINIMUM FROM UDEMY_DB.MAINASGT.NAVHISTORY T3 JOIN
(SELECT CODE, MIN(T1.NAV_DATE) AS MINIMUM FROM 
(SELECT CODE, NAV_DATE FROM UDEMY_DB.MAINASGT.NAVHISTORY WHERE YEAR(NAV_DATE) = 2018) T1
GROUP BY CODE ORDER BY MINIMUM) T2
WHERE T3.NAV_DATE = T2.MINIMUM AND T3.CODE = T2.CODE ORDER BY T2.MINIMUM) O1 JOIN
(SELECT NAV, T2.CODE AS CODE, T2.MAXIMUM FROM UDEMY_DB.MAINASGT.NAVHISTORY T3 JOIN
(SELECT CODE, MAX(T1.NAV_DATE) AS MAXIMUM FROM 
(SELECT CODE, NAV_DATE FROM UDEMY_DB.MAINASGT.NAVHISTORY WHERE YEAR(NAV_DATE) = 2018) T1
GROUP BY CODE ORDER BY MAXIMUM) T2
WHERE T3.NAV_DATE = T2.MAXIMUM AND T3.CODE = T2.CODE ORDER BY T2.MAXIMUM) O2
ON O1.CODE = O2.CODE

-- MILESTONE 2 PART 1 MTD
SELECT O1.CODE, ((O2.NAV - O1.NAV)/O1.NAV)*100 AS PERFORMANCE FROM
(SELECT NAV, T2.CODE AS CODE, T2.MINIMUM FROM "UDEMY_DB"."MAINASGT"."NAVHISTORY" T3 JOIN
(SELECT CODE, MIN(T1.NAV_DATE) AS MINIMUM FROM
(SELECT CODE, NAV_DATE FROM "UDEMY_DB"."MAINASGT"."NAVHISTORY" WHERE month(NAV_DATE) = 12) T1
GROUP BY CODE ORDER BY MINIMUM) T2
WHERE T3.NAV_DATE = T2.MINIMUM AND T3.CODE = T2.CODE ORDER BY T2.MINIMUM) O1 JOIN
(SELECT NAV, T2.CODE AS CODE, T2.MAXIMUM FROM "UDEMY_DB"."MAINASGT"."NAVHISTORY" T3 JOIN
(SELECT CODE, MAX(T1.NAV_DATE) AS MAXIMUM FROM
(SELECT CODE, NAV_DATE FROM "UDEMY_DB"."MAINASGT"."NAVHISTORY" WHERE month(NAV_DATE) = 12) T1
GROUP BY CODE ORDER BY MAXIMUM) T2
WHERE T3.NAV_DATE = T2.MAXIMUM AND T3.CODE = T2.CODE ORDER BY T2.MAXIMUM) O2
ON O1.CODE = O2.CODE

-- MILESTONE 2 PART 1 SINCE INCEPTION
SELECT O1.CODE, ((O2.NAV - O1.NAV)/O1.NAV)*100 AS PERFORMANCE FROM
(SELECT NAV, T2.CODE AS CODE, T2.MINIMUM FROM "UDEMY_DB"."MAINASGT"."NAVHISTORY" T3 JOIN
(SELECT CODE, MIN(T1.NAV_DATE) AS MINIMUM FROM
(SELECT CODE, NAV_DATE FROM "UDEMY_DB"."MAINASGT"."NAVHISTORY" ) T1
GROUP BY CODE ORDER BY MINIMUM) T2
WHERE T3.NAV_DATE = T2.MINIMUM AND T3.CODE = T2.CODE ORDER BY T2.MINIMUM) O1 JOIN
(SELECT NAV, T2.CODE AS CODE, T2.MAXIMUM FROM "UDEMY_DB"."MAINASGT"."NAVHISTORY" T3 JOIN
(SELECT CODE, MAX(T1.NAV_DATE) AS MAXIMUM FROM
(SELECT CODE, NAV_DATE FROM "UDEMY_DB"."MAINASGT"."NAVHISTORY") T1
GROUP BY CODE ORDER BY MAXIMUM) T2
WHERE T3.NAV_DATE = T2.MAXIMUM AND T3.CODE = T2.CODE ORDER BY T2.MAXIMUM) O2
ON O1.CODE = O2.CODE

-- MILESTONE 2 PART 3
select code, max(nav_date) from udemy_db.mainasgt.navhistory group by code 
having max(nav_date) < (select max(nav_date) from udemy_db.mainasgt.navhistory)

-- MILESTONE 2 PART 4 MONTHLY

SELECT O1.CODE, ((O2.NAV - O1.NAV)/O1.NAV)*100 AS PERFORMANCE FROM
(SELECT NAV, T2.CODE AS CODE, T2.MINIMUM FROM "UDEMY_DB"."MAINASGT"."NAVHISTORY" T3 JOIN
(SELECT CODE, MIN(T1.NAV_DATE) AS MINIMUM FROM
(SELECT n.CODE, n.NAV_DATE FROM "UDEMY_DB"."MAINASGT"."NAVHISTORY" n, "UDEMY_DB"."MAINASGT"."MUTUALFUND" m where n.code=m.code and m.category_id=2 and month(NAV_DATE) = 12 and year(NAV_DATE) = 2018) T1
GROUP BY CODE ORDER BY MINIMUM) T2
WHERE T3.NAV_DATE = T2.MINIMUM AND T3.CODE = T2.CODE ORDER BY T2.MINIMUM) O1 JOIN
(SELECT NAV, T2.CODE AS CODE, T2.MAXIMUM FROM "UDEMY_DB"."MAINASGT"."NAVHISTORY" T3 JOIN
(SELECT CODE, MAX(T1.NAV_DATE) AS MAXIMUM FROM
(SELECT n.CODE, n.NAV_DATE FROM "UDEMY_DB"."MAINASGT"."NAVHISTORY" n, "UDEMY_DB"."MAINASGT"."MUTUALFUND" m where n.code=m.code and m.category_id=2 and month(NAV_DATE) = 12 and year(NAV_DATE) = 2018) T1
GROUP BY CODE ORDER BY MAXIMUM) T2
WHERE T3.NAV_DATE = T2.MAXIMUM AND T3.CODE = T2.CODE ORDER BY T2.MAXIMUM) O2
ON O1.CODE = O2.CODE

-- MILESTONE 2 PART 5
select m.category_id,fc.category ,max(p.PERFORMANCE) , min(p.PERFORMANCE) 
from "UDEMY_DB"."MAINASGT"."MUTUALFUND" m,"UDEMY_DB"."MAINASGT"."FUNDCATEGORY" fc,
(SELECT O1.CODE as ccode, ((O2.NAV - O1.NAV)/O1.NAV)*100 AS PERFORMANCE FROM
(SELECT NAV, T2.CODE AS CODE, T2.MINIMUM FROM "UDEMY_DB"."MAINASGT"."NAVHISTORY" T3 JOIN
(SELECT CODE, MIN(T1.NAV_DATE) AS MINIMUM FROM
(SELECT CODE, NAV_DATE FROM "UDEMY_DB"."MAINASGT"."NAVHISTORY" where month(NAV_DATE) = 12 
and year(NAV_DATE) = 2018) T1
GROUP BY CODE ORDER BY MINIMUM) T2
WHERE T3.NAV_DATE = T2.MINIMUM AND T3.CODE = T2.CODE ORDER BY T2.MINIMUM) O1 JOIN
(SELECT NAV, T2.CODE AS CODE, T2.MAXIMUM FROM "UDEMY_DB"."MAINASGT"."NAVHISTORY" T3 JOIN
(SELECT CODE, MAX(T1.NAV_DATE) AS MAXIMUM FROM
(SELECT CODE, NAV_DATE FROM "UDEMY_DB"."MAINASGT"."NAVHISTORY" where month(NAV_DATE) = 12 
and year(NAV_DATE) = 2018) T1
GROUP BY CODE ORDER BY MAXIMUM) T2
WHERE T3.NAV_DATE = T2.MAXIMUM AND T3.CODE = T2.CODE ORDER BY T2.MAXIMUM) O2
ON O1.CODE = O2.CODE ) P where p.ccode = m.code and fc.id = m.category_id 
group by m.category_id, fc.category;



-- select * from UDEMY_DB.MAINASGT.navhistory where year(CURRENT_DATE()) = (SELECT YEAR(DATEFROMPARTS(YEAR(GETDATE()), 1, 1)) as start_year)
-- select (SELECT DATEFROMPARTS(YEAR(GETDATE()), 12, 31) as end_year)